---
import Container from "@components/Section.astro";
import { Icon } from "astro-icon/components";

const menuitems = [
  {
    title: "关于我",
    path: "/about",
  },
  {
    title: "文章",
    path: "/blog",
  },
  {
    title: "资源",
    path: "/resource",
  },
  {
    title: "作品集",
    path: "/project",
  },
  {
    title: "Newsletter",
    path: "https://zuozizhen.substack.com",
    external: true, // 添加额外字段标记外部链接
  },
];
---
  <header
    class="flex justify-between items-center py-6 mx-auto sm:py-8 border-b border-neutral-100 px-5">
    <div class="flex w-full items-center justify-between max-w-screen-lg mx-auto">
      <a href="/" class="text-xl font-black flex gap-3">
        <Icon name="logo" class="w-[4rem]" />
      </a>
      <!-- 汉堡菜单图标，小屏幕时显示 -->
      <button
        id="hamburger"
        class="lg:hidden w-10 h-10 flex items-center justify-center">
        <Icon class="w-6 h-6" name="mdi:menu" />
      </button>
      <!-- 原有导航，大屏幕时显示 -->
      <div class="hidden lg:flex gap-12 flex-shrink-0">
        {
          menuitems.map((item) => (
            <a
              href={item.path}
              class="font-semibold text-neutral-500"
              target={item.external ? "_blank" : "_self"}>
              {item.title}
            </a>
          ))
        }
      </div>
    </div>
    <!-- 全屏菜单容器，初始隐藏 -->
    <div
      id="fullscreen-menu"
      class="fixed h-screen inset-0 bg-white opacity-0 invisible flex flex-col items-center justify-center space-y-12 lg:hidden z-20">
      {
        menuitems.map((item) => (
          <a
            href={item.path}
            class="font-semibold text-neutral-900 text-4xl"
            target={item.external ? "_blank" : "_self"}>
            {item.title}
          </a>
        ))
      }
    </div>
  </header>

<script>
  const hamburger = document.getElementById("hamburger");
  const fullscreenMenu = document.getElementById("fullscreen-menu");
  const body = document.body;

  hamburger?.addEventListener("click", function () {
    if (fullscreenMenu) {
      fullscreenMenu.classList.remove("invisible"); // 显示全屏菜单
      setTimeout(() => {
        fullscreenMenu.style.opacity = "1";
        body.style.overflow = "hidden"; // 禁止滚动
      }, 10);
    }
  });

  fullscreenMenu?.addEventListener("click", function (e) {
    if (e.target && (e.target as HTMLElement).id === "fullscreen-menu") {
      fullscreenMenu.style.opacity = "0"; // 开始淡出动画
      setTimeout(() => {
        fullscreenMenu.classList.add("invisible"); // 隐藏全屏菜单
        body.style.overflow = ""; // 恢复滚动
      }, 300);
    }
  });
</script>

<style>
  #fullscreen-menu {
    transition: opacity 0.3s ease;
  }
</style>
